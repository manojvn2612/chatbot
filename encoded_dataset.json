[
    {
        "original_code": "def bubble_sort(arr):\n    n = len(arr)\n    for i in range(n):\n        for j in range(0, n-i-1):\n            if arr[j] > arr[j+1]:\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n    return arr",
        "encoded_tokens": [
            "\u2581",
            "de",
            "f",
            "\u2581bu",
            "b",
            "b",
            "le",
            "_",
            "sort",
            "(",
            "arr",
            ")",
            ":",
            "\u2581n",
            "\u2581=",
            "\u2581le",
            "n",
            "(",
            "arr",
            ")",
            "\u2581",
            "for",
            "\u2581i",
            "\u2581in",
            "\u2581ra",
            "n",
            "ge",
            "(",
            "n",
            ")",
            ":",
            "\u2581",
            "for",
            "\u2581j",
            "\u2581in",
            "\u2581ra",
            "n",
            "ge",
            "(",
            "0",
            ",",
            "\u2581n",
            "-",
            "i",
            "-1",
            ")",
            ":",
            "\u2581",
            "if",
            "\u2581arr",
            "[",
            "j",
            "]",
            "\u2581>",
            "\u2581arr",
            "[",
            "j",
            "+1]",
            ":",
            "\u2581arr",
            "[",
            "j",
            "]",
            ",",
            "\u2581arr",
            "[",
            "j",
            "+1]",
            "\u2581=",
            "\u2581arr",
            "[",
            "j",
            "+1]",
            ",",
            "\u2581arr",
            "[",
            "j",
            "]",
            "\u2581re",
            "t",
            "u",
            "r",
            "n",
            "\u2581arr"
        ],
        "label_encoded_tokens": [
            88,
            39,
            46,
            107,
            33,
            33,
            61,
            28,
            80,
            1,
            32,
            2,
            15,
            125,
            100,
            119,
            67,
            1,
            32,
            2,
            88,
            47,
            113,
            114,
            130,
            67,
            50,
            1,
            67,
            2,
            15,
            88,
            47,
            115,
            114,
            130,
            67,
            50,
            1,
            12,
            7,
            125,
            8,
            52,
            9,
            2,
            15,
            88,
            54,
            106,
            24,
            57,
            26,
            101,
            106,
            24,
            57,
            6,
            15,
            106,
            24,
            57,
            26,
            7,
            106,
            24,
            57,
            6,
            100,
            106,
            24,
            57,
            6,
            7,
            106,
            24,
            57,
            26,
            131,
            81,
            83,
            74,
            67,
            106
        ]
    },
    {
        "original_code": "def insertion_sort(arr):\n    for i in range(1, len(arr)):\n        key = arr[i]\n        j = i - 1\n        while j >= 0 and key < arr[j]:\n            arr[j + 1] = arr[j]\n            j -= 1\n        arr[j + 1] = key\n    return arr",
        "encoded_tokens": [
            "\u2581",
            "de",
            "f",
            "\u2581in",
            "se",
            "r",
            "ti",
            "o",
            "n",
            "_",
            "sort",
            "(",
            "arr",
            ")",
            ":",
            "\u2581",
            "for",
            "\u2581i",
            "\u2581in",
            "\u2581ra",
            "n",
            "ge",
            "(",
            "1",
            ",",
            "\u2581le",
            "n",
            "(",
            "arr",
            ")",
            ")",
            ":",
            "\u2581key",
            "\u2581=",
            "\u2581arr",
            "[",
            "i",
            "]",
            "\u2581j",
            "\u2581=",
            "\u2581i",
            "\u2581-",
            "\u25811",
            "\u2581",
            "w",
            "h",
            "i",
            "le",
            "\u2581j",
            "\u2581>",
            "=",
            "\u25810",
            "\u2581a",
            "nd",
            "\u2581key",
            "\u2581<",
            "\u2581arr",
            "[",
            "j",
            "]",
            ":",
            "\u2581arr",
            "[",
            "j",
            "\u2581+",
            "\u25811]",
            "\u2581=",
            "\u2581arr",
            "[",
            "j",
            "]",
            "\u2581j",
            "\u2581-",
            "=",
            "\u25811",
            "\u2581arr",
            "[",
            "j",
            "\u2581+",
            "\u25811]",
            "\u2581=",
            "\u2581key",
            "\u2581re",
            "t",
            "u",
            "r",
            "n",
            "\u2581arr"
        ],
        "label_encoded_tokens": [
            88,
            39,
            46,
            114,
            79,
            74,
            82,
            71,
            67,
            28,
            80,
            1,
            32,
            2,
            15,
            88,
            47,
            113,
            114,
            130,
            67,
            50,
            1,
            13,
            7,
            119,
            67,
            1,
            32,
            2,
            2,
            15,
            117,
            100,
            106,
            24,
            52,
            26,
            115,
            100,
            113,
            91,
            95,
            88,
            85,
            51,
            52,
            61,
            115,
            101,
            20,
            94,
            105,
            68,
            117,
            99,
            106,
            24,
            57,
            26,
            15,
            106,
            24,
            57,
            90,
            97,
            100,
            106,
            24,
            57,
            26,
            115,
            91,
            20,
            95,
            106,
            24,
            57,
            90,
            97,
            100,
            117,
            131,
            81,
            83,
            74,
            67,
            106
        ]
    },
    {
        "original_code": "def selection_sort(arr):\n    for i in range(len(arr)):\n        min_idx = i\n        for j in range(i+1, len(arr)):\n            if arr[j] < arr[min_idx]:\n                min_idx = j\n        arr[i], arr[min_idx] = arr[min_idx], arr[i]\n    return arr",
        "encoded_tokens": [
            "\u2581",
            "de",
            "f",
            "\u2581",
            "se",
            "le",
            "c",
            "ti",
            "o",
            "n",
            "_",
            "sort",
            "(",
            "arr",
            ")",
            ":",
            "\u2581",
            "for",
            "\u2581i",
            "\u2581in",
            "\u2581ra",
            "n",
            "ge",
            "(",
            "le",
            "n",
            "(",
            "arr",
            ")",
            ")",
            ":",
            "\u2581mi",
            "n",
            "_",
            "idx",
            "\u2581=",
            "\u2581i",
            "\u2581",
            "for",
            "\u2581j",
            "\u2581in",
            "\u2581ra",
            "n",
            "ge",
            "(",
            "i",
            "+1",
            ",",
            "\u2581le",
            "n",
            "(",
            "arr",
            ")",
            ")",
            ":",
            "\u2581",
            "if",
            "\u2581arr",
            "[",
            "j",
            "]",
            "\u2581<",
            "\u2581arr",
            "[",
            "mi",
            "n",
            "_",
            "idx",
            "]",
            ":",
            "\u2581mi",
            "n",
            "_",
            "idx",
            "\u2581=",
            "\u2581j",
            "\u2581arr",
            "[",
            "i",
            "]",
            ",",
            "\u2581arr",
            "[",
            "mi",
            "n",
            "_",
            "idx",
            "]",
            "\u2581=",
            "\u2581arr",
            "[",
            "mi",
            "n",
            "_",
            "idx",
            "]",
            ",",
            "\u2581arr",
            "[",
            "i",
            "]",
            "\u2581re",
            "t",
            "u",
            "r",
            "n",
            "\u2581arr"
        ],
        "label_encoded_tokens": [
            88,
            39,
            46,
            88,
            79,
            61,
            35,
            82,
            71,
            67,
            28,
            80,
            1,
            32,
            2,
            15,
            88,
            47,
            113,
            114,
            130,
            67,
            50,
            1,
            61,
            67,
            1,
            32,
            2,
            2,
            15,
            123,
            67,
            28,
            53,
            100,
            113,
            88,
            47,
            115,
            114,
            130,
            67,
            50,
            1,
            52,
            5,
            7,
            119,
            67,
            1,
            32,
            2,
            2,
            15,
            88,
            54,
            106,
            24,
            57,
            26,
            99,
            106,
            24,
            65,
            67,
            28,
            53,
            26,
            15,
            123,
            67,
            28,
            53,
            100,
            115,
            106,
            24,
            52,
            26,
            7,
            106,
            24,
            65,
            67,
            28,
            53,
            26,
            100,
            106,
            24,
            65,
            67,
            28,
            53,
            26,
            7,
            106,
            24,
            52,
            26,
            131,
            81,
            83,
            74,
            67,
            106
        ]
    },
    {
        "original_code": "def merge_sort(arr):\n    if len(arr) > 1:\n        mid = len(arr) // 2\n        L = arr[:mid]\n        R = arr[mid:]\n\n        merge_sort(L)\n        merge_sort(R)\n\n        i = j = k = 0\n\n        while i < len(L) and j < len(R):\n            if L[i] < R[j]:\n                arr[k] = L[i]\n                i += 1\n            else:\n                arr[k] = R[j]\n                j += 1\n            k += 1\n\n        while i < len(L):\n            arr[k] = L[i]\n            i += 1\n            k += 1\n\n        while j < len(R):\n            arr[k] = R[j]\n            j += 1\n            k += 1\n    return arr",
        "encoded_tokens": [
            "\u2581",
            "de",
            "f",
            "\u2581m",
            "er",
            "ge",
            "_",
            "sort",
            "(",
            "arr",
            ")",
            ":",
            "\u2581",
            "if",
            "\u2581le",
            "n",
            "(",
            "arr",
            ")",
            "\u2581>",
            "\u25811",
            ":",
            "\u2581mid",
            "\u2581=",
            "\u2581le",
            "n",
            "(",
            "arr",
            ")",
            "\u2581//",
            "\u25812",
            "\u2581L",
            "\u2581=",
            "\u2581arr",
            "[",
            ":",
            "mid",
            "]",
            "\u2581R",
            "\u2581=",
            "\u2581arr",
            "[",
            "mid",
            ":",
            "]",
            "\u2581m",
            "er",
            "ge",
            "_",
            "sort",
            "(",
            "L",
            ")",
            "\u2581m",
            "er",
            "ge",
            "_",
            "sort",
            "(",
            "R",
            ")",
            "\u2581i",
            "\u2581=",
            "\u2581j",
            "\u2581=",
            "\u2581k",
            "\u2581=",
            "\u25810",
            "\u2581",
            "w",
            "h",
            "i",
            "le",
            "\u2581i",
            "\u2581<",
            "\u2581le",
            "n",
            "(",
            "L",
            ")",
            "\u2581a",
            "nd",
            "\u2581j",
            "\u2581<",
            "\u2581le",
            "n",
            "(",
            "R",
            ")",
            ":",
            "\u2581",
            "if",
            "\u2581L",
            "[",
            "i",
            "]",
            "\u2581<",
            "\u2581R",
            "[",
            "j",
            "]",
            ":",
            "\u2581arr",
            "[",
            "k",
            "]",
            "\u2581=",
            "\u2581L",
            "[",
            "i",
            "]",
            "\u2581i",
            "\u2581+",
            "=",
            "\u25811",
            "\u2581",
            "el",
            "se",
            ":",
            "\u2581arr",
            "[",
            "k",
            "]",
            "\u2581=",
            "\u2581R",
            "[",
            "j",
            "]",
            "\u2581j",
            "\u2581+",
            "=",
            "\u25811",
            "\u2581k",
            "\u2581+",
            "=",
            "\u25811",
            "\u2581",
            "w",
            "h",
            "i",
            "le",
            "\u2581i",
            "\u2581<",
            "\u2581le",
            "n",
            "(",
            "L",
            ")",
            ":",
            "\u2581arr",
            "[",
            "k",
            "]",
            "\u2581=",
            "\u2581L",
            "[",
            "i",
            "]",
            "\u2581i",
            "\u2581+",
            "=",
            "\u25811",
            "\u2581k",
            "\u2581+",
            "=",
            "\u25811",
            "\u2581",
            "w",
            "h",
            "i",
            "le",
            "\u2581j",
            "\u2581<",
            "\u2581le",
            "n",
            "(",
            "R",
            ")",
            ":",
            "\u2581arr",
            "[",
            "k",
            "]",
            "\u2581=",
            "\u2581R",
            "[",
            "j",
            "]",
            "\u2581j",
            "\u2581+",
            "=",
            "\u25811",
            "\u2581k",
            "\u2581+",
            "=",
            "\u25811",
            "\u2581re",
            "t",
            "u",
            "r",
            "n",
            "\u2581arr"
        ],
        "label_encoded_tokens": [
            88,
            39,
            46,
            121,
            44,
            50,
            28,
            80,
            1,
            32,
            2,
            15,
            88,
            54,
            119,
            67,
            1,
            32,
            2,
            101,
            95,
            15,
            124,
            100,
            119,
            67,
            1,
            32,
            2,
            93,
            98,
            102,
            100,
            106,
            24,
            15,
            66,
            26,
            103,
            100,
            106,
            24,
            66,
            15,
            26,
            121,
            44,
            50,
            28,
            80,
            1,
            22,
            2,
            121,
            44,
            50,
            28,
            80,
            1,
            23,
            2,
            113,
            100,
            115,
            100,
            116,
            100,
            94,
            88,
            85,
            51,
            52,
            61,
            113,
            99,
            119,
            67,
            1,
            22,
            2,
            105,
            68,
            115,
            99,
            119,
            67,
            1,
            23,
            2,
            15,
            88,
            54,
            102,
            24,
            52,
            26,
            99,
            103,
            24,
            57,
            26,
            15,
            106,
            24,
            58,
            26,
            100,
            102,
            24,
            52,
            26,
            113,
            90,
            20,
            95,
            88,
            42,
            79,
            15,
            106,
            24,
            58,
            26,
            100,
            103,
            24,
            57,
            26,
            115,
            90,
            20,
            95,
            116,
            90,
            20,
            95,
            88,
            85,
            51,
            52,
            61,
            113,
            99,
            119,
            67,
            1,
            22,
            2,
            15,
            106,
            24,
            58,
            26,
            100,
            102,
            24,
            52,
            26,
            113,
            90,
            20,
            95,
            116,
            90,
            20,
            95,
            88,
            85,
            51,
            52,
            61,
            115,
            99,
            119,
            67,
            1,
            23,
            2,
            15,
            106,
            24,
            58,
            26,
            100,
            103,
            24,
            57,
            26,
            115,
            90,
            20,
            95,
            116,
            90,
            20,
            95,
            131,
            81,
            83,
            74,
            67,
            106
        ]
    },
    {
        "original_code": "def quick_sort(arr):\n    if len(arr) <= 1:\n        return arr\n    else:\n        pivot = arr[len(arr) // 2]\n        left = [x for x in arr if x < pivot]\n        middle = [x for x in arr if x == pivot]\n        right = [x for x in arr if x > pivot]\n        return quick_sort(left) + middle + quick_sort(right)",
        "encoded_tokens": [
            "\u2581",
            "de",
            "f",
            "\u2581",
            "q",
            "u",
            "i",
            "ck",
            "_",
            "sort",
            "(",
            "arr",
            ")",
            ":",
            "\u2581",
            "if",
            "\u2581le",
            "n",
            "(",
            "arr",
            ")",
            "\u2581<",
            "=",
            "\u25811",
            ":",
            "\u2581re",
            "t",
            "u",
            "r",
            "n",
            "\u2581arr",
            "\u2581",
            "el",
            "se",
            ":",
            "\u2581pivot",
            "\u2581=",
            "\u2581arr",
            "[",
            "le",
            "n",
            "(",
            "arr",
            ")",
            "\u2581//",
            "\u25812",
            "]",
            "\u2581left",
            "\u2581=",
            "\u2581",
            "[",
            "x",
            "\u2581",
            "for",
            "\u2581",
            "x",
            "\u2581in",
            "\u2581arr",
            "\u2581",
            "if",
            "\u2581",
            "x",
            "\u2581<",
            "\u2581pivot",
            "]",
            "\u2581mid",
            "d",
            "le",
            "\u2581=",
            "\u2581",
            "[",
            "x",
            "\u2581",
            "for",
            "\u2581",
            "x",
            "\u2581in",
            "\u2581arr",
            "\u2581",
            "if",
            "\u2581",
            "x",
            "\u2581=",
            "=",
            "\u2581pivot",
            "]",
            "\u2581right",
            "\u2581=",
            "\u2581",
            "[",
            "x",
            "\u2581",
            "for",
            "\u2581",
            "x",
            "\u2581in",
            "\u2581arr",
            "\u2581",
            "if",
            "\u2581",
            "x",
            "\u2581>",
            "\u2581pivot",
            "]",
            "\u2581re",
            "t",
            "u",
            "r",
            "n",
            "\u2581",
            "q",
            "u",
            "i",
            "ck",
            "_",
            "sort",
            "(",
            "left",
            ")",
            "\u2581+",
            "\u2581mid",
            "d",
            "le",
            "\u2581+",
            "\u2581",
            "q",
            "u",
            "i",
            "ck",
            "_",
            "sort",
            "(",
            "right",
            ")"
        ],
        "label_encoded_tokens": [
            88,
            39,
            46,
            88,
            73,
            83,
            52,
            36,
            28,
            80,
            1,
            32,
            2,
            15,
            88,
            54,
            119,
            67,
            1,
            32,
            2,
            99,
            20,
            95,
            15,
            131,
            81,
            83,
            74,
            67,
            106,
            88,
            42,
            79,
            15,
            128,
            100,
            106,
            24,
            61,
            67,
            1,
            32,
            2,
            93,
            98,
            26,
            120,
            100,
            88,
            24,
            86,
            88,
            47,
            88,
            86,
            114,
            106,
            88,
            54,
            88,
            86,
            99,
            128,
            26,
            124,
            38,
            61,
            100,
            88,
            24,
            86,
            88,
            47,
            88,
            86,
            114,
            106,
            88,
            54,
            88,
            86,
            100,
            20,
            128,
            26,
            132,
            100,
            88,
            24,
            86,
            88,
            47,
            88,
            86,
            114,
            106,
            88,
            54,
            88,
            86,
            101,
            128,
            26,
            131,
            81,
            83,
            74,
            67,
            88,
            73,
            83,
            52,
            36,
            28,
            80,
            1,
            62,
            2,
            90,
            124,
            38,
            61,
            90,
            88,
            73,
            83,
            52,
            36,
            28,
            80,
            1,
            77,
            2
        ]
    },
    {
        "original_code": "def heapify(arr, n, i):\n    largest = i\n    left = 2 * i + 1\n    right = 2 * i + 2\n\n    if left < n and arr[left] > arr[largest]:\n        largest = left\n\n    if right < n and arr[right] > arr[largest]:\n        largest = right\n\n    if largest != i:\n        arr[i], arr[largest] = arr[largest], arr[i]\n        heapify(arr, n, largest)\n\n\ndef heap_sort(arr):\n    n = len(arr)\n    for i in range(n // 2 - 1, -1, -1):\n        heapify(arr, n, i)\n\n    for i in range(n-1, 0, -1):\n        arr[i], arr[0] = arr[0], arr[i]\n        heapify(arr, i, 0)\n    return arr",
        "encoded_tokens": [
            "\u2581",
            "de",
            "f",
            "\u2581heap",
            "if",
            "y",
            "(",
            "arr",
            ",",
            "\u2581n",
            ",",
            "\u2581i",
            ")",
            ":",
            "\u2581largest",
            "\u2581=",
            "\u2581i",
            "\u2581left",
            "\u2581=",
            "\u25812",
            "\u2581*",
            "\u2581i",
            "\u2581+",
            "\u25811",
            "\u2581right",
            "\u2581=",
            "\u25812",
            "\u2581*",
            "\u2581i",
            "\u2581+",
            "\u25812",
            "\u2581",
            "if",
            "\u2581left",
            "\u2581<",
            "\u2581n",
            "\u2581a",
            "nd",
            "\u2581arr",
            "[",
            "left",
            "]",
            "\u2581>",
            "\u2581arr",
            "[",
            "largest",
            "]",
            ":",
            "\u2581largest",
            "\u2581=",
            "\u2581left",
            "\u2581",
            "if",
            "\u2581right",
            "\u2581<",
            "\u2581n",
            "\u2581a",
            "nd",
            "\u2581arr",
            "[",
            "right",
            "]",
            "\u2581>",
            "\u2581arr",
            "[",
            "largest",
            "]",
            ":",
            "\u2581largest",
            "\u2581=",
            "\u2581right",
            "\u2581",
            "if",
            "\u2581largest",
            "\u2581",
            "!",
            "=",
            "\u2581i",
            ":",
            "\u2581arr",
            "[",
            "i",
            "]",
            ",",
            "\u2581arr",
            "[",
            "largest",
            "]",
            "\u2581=",
            "\u2581arr",
            "[",
            "largest",
            "]",
            ",",
            "\u2581arr",
            "[",
            "i",
            "]",
            "\u2581heap",
            "if",
            "y",
            "(",
            "arr",
            ",",
            "\u2581n",
            ",",
            "\u2581largest",
            ")",
            "\u2581",
            "de",
            "f",
            "\u2581heap",
            "_",
            "sort",
            "(",
            "arr",
            ")",
            ":",
            "\u2581n",
            "\u2581=",
            "\u2581le",
            "n",
            "(",
            "arr",
            ")",
            "\u2581",
            "for",
            "\u2581i",
            "\u2581in",
            "\u2581ra",
            "n",
            "ge",
            "(",
            "n",
            "\u2581//",
            "\u25812",
            "\u2581-",
            "\u25811",
            ",",
            "\u2581-1",
            ",",
            "\u2581-1",
            ")",
            ":",
            "\u2581heap",
            "if",
            "y",
            "(",
            "arr",
            ",",
            "\u2581n",
            ",",
            "\u2581i",
            ")",
            "\u2581",
            "for",
            "\u2581i",
            "\u2581in",
            "\u2581ra",
            "n",
            "ge",
            "(",
            "n",
            "-1",
            ",",
            "\u25810",
            ",",
            "\u2581-1",
            ")",
            ":",
            "\u2581arr",
            "[",
            "i",
            "]",
            ",",
            "\u2581arr",
            "[0]",
            "\u2581=",
            "\u2581arr",
            "[0]",
            ",",
            "\u2581arr",
            "[",
            "i",
            "]",
            "\u2581heap",
            "if",
            "y",
            "(",
            "arr",
            ",",
            "\u2581i",
            ",",
            "\u25810",
            ")",
            "\u2581re",
            "t",
            "u",
            "r",
            "n",
            "\u2581arr"
        ],
        "label_encoded_tokens": [
            88,
            39,
            46,
            112,
            54,
            87,
            1,
            32,
            7,
            125,
            7,
            113,
            2,
            15,
            118,
            100,
            113,
            120,
            100,
            98,
            89,
            113,
            90,
            95,
            132,
            100,
            98,
            89,
            113,
            90,
            98,
            88,
            54,
            120,
            99,
            125,
            105,
            68,
            106,
            24,
            62,
            26,
            101,
            106,
            24,
            60,
            26,
            15,
            118,
            100,
            120,
            88,
            54,
            132,
            99,
            125,
            105,
            68,
            106,
            24,
            77,
            26,
            101,
            106,
            24,
            60,
            26,
            15,
            118,
            100,
            132,
            88,
            54,
            118,
            88,
            19,
            20,
            113,
            15,
            106,
            24,
            52,
            26,
            7,
            106,
            24,
            60,
            26,
            100,
            106,
            24,
            60,
            26,
            7,
            106,
            24,
            52,
            26,
            112,
            54,
            87,
            1,
            32,
            7,
            125,
            7,
            118,
            2,
            88,
            39,
            46,
            112,
            28,
            80,
            1,
            32,
            2,
            15,
            125,
            100,
            119,
            67,
            1,
            32,
            2,
            88,
            47,
            113,
            114,
            130,
            67,
            50,
            1,
            67,
            93,
            98,
            91,
            95,
            7,
            92,
            7,
            92,
            2,
            15,
            112,
            54,
            87,
            1,
            32,
            7,
            125,
            7,
            113,
            2,
            88,
            47,
            113,
            114,
            130,
            67,
            50,
            1,
            67,
            9,
            7,
            94,
            7,
            92,
            2,
            15,
            106,
            24,
            52,
            26,
            7,
            106,
            25,
            100,
            106,
            25,
            7,
            106,
            24,
            52,
            26,
            112,
            54,
            87,
            1,
            32,
            7,
            113,
            7,
            94,
            2,
            131,
            81,
            83,
            74,
            67,
            106
        ]
    },
    {
        "original_code": "def shell_sort(arr):\n    n = len(arr)\n    gap = n // 2\n    while gap > 0:\n        for i in range(gap, n):\n            temp = arr[i]\n            j = i\n            while j >= gap and arr[j - gap] > temp:\n                arr[j] = arr[j - gap]\n                j -= gap\n            arr[j] = temp\n        gap //= 2\n    return arr",
        "encoded_tokens": [
            "\u2581",
            "de",
            "f",
            "\u2581s",
            "h",
            "el",
            "l",
            "_",
            "sort",
            "(",
            "arr",
            ")",
            ":",
            "\u2581n",
            "\u2581=",
            "\u2581le",
            "n",
            "(",
            "arr",
            ")",
            "\u2581gap",
            "\u2581=",
            "\u2581n",
            "\u2581//",
            "\u25812",
            "\u2581",
            "w",
            "h",
            "i",
            "le",
            "\u2581gap",
            "\u2581>",
            "\u25810",
            ":",
            "\u2581",
            "for",
            "\u2581i",
            "\u2581in",
            "\u2581ra",
            "n",
            "ge",
            "(",
            "gap",
            ",",
            "\u2581n",
            ")",
            ":",
            "\u2581temp",
            "\u2581=",
            "\u2581arr",
            "[",
            "i",
            "]",
            "\u2581j",
            "\u2581=",
            "\u2581i",
            "\u2581",
            "w",
            "h",
            "i",
            "le",
            "\u2581j",
            "\u2581>",
            "=",
            "\u2581gap",
            "\u2581a",
            "nd",
            "\u2581arr",
            "[",
            "j",
            "\u2581-",
            "\u2581gap",
            "]",
            "\u2581>",
            "\u2581temp",
            ":",
            "\u2581arr",
            "[",
            "j",
            "]",
            "\u2581=",
            "\u2581arr",
            "[",
            "j",
            "\u2581-",
            "\u2581gap",
            "]",
            "\u2581j",
            "\u2581-",
            "=",
            "\u2581gap",
            "\u2581arr",
            "[",
            "j",
            "]",
            "\u2581=",
            "\u2581temp",
            "\u2581gap",
            "\u2581//",
            "=",
            "\u25812",
            "\u2581re",
            "t",
            "u",
            "r",
            "n",
            "\u2581arr"
        ],
        "label_encoded_tokens": [
            88,
            39,
            46,
            133,
            51,
            42,
            59,
            28,
            80,
            1,
            32,
            2,
            15,
            125,
            100,
            119,
            67,
            1,
            32,
            2,
            111,
            100,
            125,
            93,
            98,
            88,
            85,
            51,
            52,
            61,
            111,
            101,
            94,
            15,
            88,
            47,
            113,
            114,
            130,
            67,
            50,
            1,
            49,
            7,
            125,
            2,
            15,
            134,
            100,
            106,
            24,
            52,
            26,
            115,
            100,
            113,
            88,
            85,
            51,
            52,
            61,
            115,
            101,
            20,
            111,
            105,
            68,
            106,
            24,
            57,
            91,
            111,
            26,
            101,
            134,
            15,
            106,
            24,
            57,
            26,
            100,
            106,
            24,
            57,
            91,
            111,
            26,
            115,
            91,
            20,
            111,
            106,
            24,
            57,
            26,
            100,
            134,
            111,
            93,
            20,
            98,
            131,
            81,
            83,
            74,
            67,
            106
        ]
    },
    {
        "original_code": "def counting_sort_for_radix(arr, exp):\n    n = len(arr)\n    output = [0] * n\n    count = [0] * 10\n\n    for i in range(n):\n        index = arr[i] // exp\n        count[index % 10] += 1\n\n    for i in range(1, 10):\n        count[i] += count[i - 1]\n\n    i = n - 1\n    while i >= 0:\n        index = arr[i] // exp\n        output[count[index % 10] - 1] = arr[i]\n        count[index % 10] -= 1\n        i -= 1\n\n    for i in range(len(arr)):\n        arr[i] = output[i]\n\n\ndef radix_sort(arr):\n    max_val = max(arr)\n    exp = 1\n    while max_val // exp > 0:\n        counting_sort_for_radix(arr, exp)\n        exp *= 10\n    return arr",
        "encoded_tokens": [
            "\u2581",
            "de",
            "f",
            "\u2581count",
            "i",
            "ng",
            "_",
            "sort",
            "_",
            "for",
            "_",
            "radix",
            "(",
            "arr",
            ",",
            "\u2581exp",
            ")",
            ":",
            "\u2581n",
            "\u2581=",
            "\u2581le",
            "n",
            "(",
            "arr",
            ")",
            "\u2581output",
            "\u2581=",
            "\u2581",
            "[0]",
            "\u2581*",
            "\u2581n",
            "\u2581count",
            "\u2581=",
            "\u2581",
            "[0]",
            "\u2581*",
            "\u258110",
            "\u2581",
            "for",
            "\u2581i",
            "\u2581in",
            "\u2581ra",
            "n",
            "ge",
            "(",
            "n",
            ")",
            ":",
            "\u2581",
            "index",
            "\u2581=",
            "\u2581arr",
            "[",
            "i",
            "]",
            "\u2581//",
            "\u2581exp",
            "\u2581count",
            "[",
            "index",
            "\u2581",
            "%",
            "\u258110",
            "]",
            "\u2581+",
            "=",
            "\u25811",
            "\u2581",
            "for",
            "\u2581i",
            "\u2581in",
            "\u2581ra",
            "n",
            "ge",
            "(",
            "1",
            ",",
            "\u258110",
            ")",
            ":",
            "\u2581count",
            "[",
            "i",
            "]",
            "\u2581+",
            "=",
            "\u2581count",
            "[",
            "i",
            "\u2581-",
            "\u25811]",
            "\u2581i",
            "\u2581=",
            "\u2581n",
            "\u2581-",
            "\u25811",
            "\u2581",
            "w",
            "h",
            "i",
            "le",
            "\u2581i",
            "\u2581>",
            "=",
            "\u25810",
            ":",
            "\u2581",
            "index",
            "\u2581=",
            "\u2581arr",
            "[",
            "i",
            "]",
            "\u2581//",
            "\u2581exp",
            "\u2581output",
            "[",
            "count",
            "[",
            "index",
            "\u2581",
            "%",
            "\u258110",
            "]",
            "\u2581-",
            "\u25811]",
            "\u2581=",
            "\u2581arr",
            "[",
            "i",
            "]",
            "\u2581count",
            "[",
            "index",
            "\u2581",
            "%",
            "\u258110",
            "]",
            "\u2581-",
            "=",
            "\u25811",
            "\u2581i",
            "\u2581-",
            "=",
            "\u25811",
            "\u2581",
            "for",
            "\u2581i",
            "\u2581in",
            "\u2581ra",
            "n",
            "ge",
            "(",
            "le",
            "n",
            "(",
            "arr",
            ")",
            ")",
            ":",
            "\u2581arr",
            "[",
            "i",
            "]",
            "\u2581=",
            "\u2581output",
            "[",
            "i",
            "]",
            "\u2581",
            "de",
            "f",
            "\u2581",
            "radix",
            "_",
            "sort",
            "(",
            "arr",
            ")",
            ":",
            "\u2581max",
            "_",
            "v",
            "a",
            "l",
            "\u2581=",
            "\u2581max",
            "(",
            "arr",
            ")",
            "\u2581exp",
            "\u2581=",
            "\u25811",
            "\u2581",
            "w",
            "h",
            "i",
            "le",
            "\u2581max",
            "_",
            "v",
            "a",
            "l",
            "\u2581//",
            "\u2581exp",
            "\u2581>",
            "\u25810",
            ":",
            "\u2581count",
            "i",
            "ng",
            "_",
            "sort",
            "_",
            "for",
            "_",
            "radix",
            "(",
            "arr",
            ",",
            "\u2581exp",
            ")",
            "\u2581exp",
            "\u2581*",
            "=",
            "\u258110",
            "\u2581re",
            "t",
            "u",
            "r",
            "n",
            "\u2581arr"
        ],
        "label_encoded_tokens": [
            88,
            39,
            46,
            109,
            52,
            69,
            28,
            80,
            28,
            47,
            28,
            75,
            1,
            32,
            7,
            110,
            2,
            15,
            125,
            100,
            119,
            67,
            1,
            32,
            2,
            127,
            100,
            88,
            25,
            89,
            125,
            109,
            100,
            88,
            25,
            89,
            96,
            88,
            47,
            113,
            114,
            130,
            67,
            50,
            1,
            67,
            2,
            15,
            88,
            56,
            100,
            106,
            24,
            52,
            26,
            93,
            110,
            109,
            24,
            56,
            88,
            0,
            96,
            26,
            90,
            20,
            95,
            88,
            47,
            113,
            114,
            130,
            67,
            50,
            1,
            13,
            7,
            96,
            2,
            15,
            109,
            24,
            52,
            26,
            90,
            20,
            109,
            24,
            52,
            91,
            97,
            113,
            100,
            125,
            91,
            95,
            88,
            85,
            51,
            52,
            61,
            113,
            101,
            20,
            94,
            15,
            88,
            56,
            100,
            106,
            24,
            52,
            26,
            93,
            110,
            127,
            24,
            37,
            24,
            56,
            88,
            0,
            96,
            26,
            91,
            97,
            100,
            106,
            24,
            52,
            26,
            109,
            24,
            56,
            88,
            0,
            96,
            26,
            91,
            20,
            95,
            113,
            91,
            20,
            95,
            88,
            47,
            113,
            114,
            130,
            67,
            50,
            1,
            61,
            67,
            1,
            32,
            2,
            2,
            15,
            106,
            24,
            52,
            26,
            100,
            127,
            24,
            52,
            26,
            88,
            39,
            46,
            88,
            75,
            28,
            80,
            1,
            32,
            2,
            15,
            122,
            28,
            84,
            29,
            59,
            100,
            122,
            1,
            32,
            2,
            110,
            100,
            95,
            88,
            85,
            51,
            52,
            61,
            122,
            28,
            84,
            29,
            59,
            93,
            110,
            101,
            94,
            15,
            109,
            52,
            69,
            28,
            80,
            28,
            47,
            28,
            75,
            1,
            32,
            7,
            110,
            2,
            110,
            89,
            20,
            96,
            131,
            81,
            83,
            74,
            67,
            106
        ]
    },
    {
        "original_code": "def counting_sort(arr):\n    max_val = max(arr)\n    count = [0] * (max_val + 1)\n    output = [0] * len(arr)\n\n    for num in arr:\n        count[num] += 1\n\n    for i in range(1, len(count)):\n        count[i] += count[i - 1]\n\n    for num in reversed(arr):\n        output[count[num] - 1] = num\n        count[num] -= 1\n\n    return output",
        "encoded_tokens": [
            "\u2581",
            "de",
            "f",
            "\u2581count",
            "i",
            "ng",
            "_",
            "sort",
            "(",
            "arr",
            ")",
            ":",
            "\u2581max",
            "_",
            "v",
            "a",
            "l",
            "\u2581=",
            "\u2581max",
            "(",
            "arr",
            ")",
            "\u2581count",
            "\u2581=",
            "\u2581",
            "[0]",
            "\u2581*",
            "\u2581",
            "(",
            "max",
            "_",
            "v",
            "a",
            "l",
            "\u2581+",
            "\u25811",
            ")",
            "\u2581output",
            "\u2581=",
            "\u2581",
            "[0]",
            "\u2581*",
            "\u2581le",
            "n",
            "(",
            "arr",
            ")",
            "\u2581",
            "for",
            "\u2581num",
            "\u2581in",
            "\u2581arr",
            ":",
            "\u2581count",
            "[",
            "num",
            "]",
            "\u2581+",
            "=",
            "\u25811",
            "\u2581",
            "for",
            "\u2581i",
            "\u2581in",
            "\u2581ra",
            "n",
            "ge",
            "(",
            "1",
            ",",
            "\u2581le",
            "n",
            "(",
            "count",
            ")",
            ")",
            ":",
            "\u2581count",
            "[",
            "i",
            "]",
            "\u2581+",
            "=",
            "\u2581count",
            "[",
            "i",
            "\u2581-",
            "\u25811]",
            "\u2581",
            "for",
            "\u2581num",
            "\u2581in",
            "\u2581re",
            "v",
            "er",
            "se",
            "d",
            "(",
            "arr",
            ")",
            ":",
            "\u2581output",
            "[",
            "count",
            "[",
            "num",
            "]",
            "\u2581-",
            "\u25811]",
            "\u2581=",
            "\u2581num",
            "\u2581count",
            "[",
            "num",
            "]",
            "\u2581-",
            "=",
            "\u25811",
            "\u2581re",
            "t",
            "u",
            "r",
            "n",
            "\u2581output"
        ],
        "label_encoded_tokens": [
            88,
            39,
            46,
            109,
            52,
            69,
            28,
            80,
            1,
            32,
            2,
            15,
            122,
            28,
            84,
            29,
            59,
            100,
            122,
            1,
            32,
            2,
            109,
            100,
            88,
            25,
            89,
            88,
            1,
            64,
            28,
            84,
            29,
            59,
            90,
            95,
            2,
            127,
            100,
            88,
            25,
            89,
            119,
            67,
            1,
            32,
            2,
            88,
            47,
            126,
            114,
            106,
            15,
            109,
            24,
            70,
            26,
            90,
            20,
            95,
            88,
            47,
            113,
            114,
            130,
            67,
            50,
            1,
            13,
            7,
            119,
            67,
            1,
            37,
            2,
            2,
            15,
            109,
            24,
            52,
            26,
            90,
            20,
            109,
            24,
            52,
            91,
            97,
            88,
            47,
            126,
            114,
            131,
            84,
            44,
            79,
            38,
            1,
            32,
            2,
            15,
            127,
            24,
            37,
            24,
            70,
            26,
            91,
            97,
            100,
            126,
            109,
            24,
            70,
            26,
            91,
            20,
            95,
            131,
            81,
            83,
            74,
            67,
            127
        ]
    },
    {
        "original_code": "def bucket_sort(arr):\n    bucket = []\n    n = len(arr)\n    for i in range(n):\n        bucket.append([])\n\n    for j in arr:\n        index = int(n * j)\n        bucket[index].append(j)\n\n    for i in range(n):\n        bucket[i] = sorted(bucket[i])\n\n    k = 0\n    for i in range(n):\n        for j in range(len(bucket[i])):\n            arr[k] = bucket[i][j]\n            k += 1\n    return arr",
        "encoded_tokens": [
            "\u2581",
            "de",
            "f",
            "\u2581bucket",
            "_",
            "sort",
            "(",
            "arr",
            ")",
            ":",
            "\u2581bucket",
            "\u2581=",
            "\u2581",
            "[",
            "]",
            "\u2581n",
            "\u2581=",
            "\u2581le",
            "n",
            "(",
            "arr",
            ")",
            "\u2581",
            "for",
            "\u2581i",
            "\u2581in",
            "\u2581ra",
            "n",
            "ge",
            "(",
            "n",
            ")",
            ":",
            "\u2581bucket",
            ".",
            "ap",
            "p",
            "e",
            "nd",
            "(",
            "[",
            "]",
            ")",
            "\u2581",
            "for",
            "\u2581j",
            "\u2581in",
            "\u2581arr",
            ":",
            "\u2581",
            "index",
            "\u2581=",
            "\u2581in",
            "t",
            "(",
            "n",
            "\u2581*",
            "\u2581j",
            ")",
            "\u2581bucket",
            "[",
            "index",
            "]",
            ".",
            "ap",
            "p",
            "e",
            "nd",
            "(",
            "j",
            ")",
            "\u2581",
            "for",
            "\u2581i",
            "\u2581in",
            "\u2581ra",
            "n",
            "ge",
            "(",
            "n",
            ")",
            ":",
            "\u2581bucket",
            "[",
            "i",
            "]",
            "\u2581=",
            "\u2581",
            "sort",
            "e",
            "d",
            "(",
            "bucket",
            "[",
            "i",
            "]",
            ")",
            "\u2581k",
            "\u2581=",
            "\u25810",
            "\u2581",
            "for",
            "\u2581i",
            "\u2581in",
            "\u2581ra",
            "n",
            "ge",
            "(",
            "n",
            ")",
            ":",
            "\u2581",
            "for",
            "\u2581j",
            "\u2581in",
            "\u2581ra",
            "n",
            "ge",
            "(",
            "le",
            "n",
            "(",
            "bucket",
            "[",
            "i",
            "]",
            ")",
            ")",
            ":",
            "\u2581arr",
            "[",
            "k",
            "]",
            "\u2581=",
            "\u2581bucket",
            "[",
            "i",
            "]",
            "[",
            "j",
            "]",
            "\u2581k",
            "\u2581+",
            "=",
            "\u25811",
            "\u2581re",
            "t",
            "u",
            "r",
            "n",
            "\u2581arr"
        ],
        "label_encoded_tokens": [
            88,
            39,
            46,
            108,
            28,
            80,
            1,
            32,
            2,
            15,
            108,
            100,
            88,
            24,
            26,
            125,
            100,
            119,
            67,
            1,
            32,
            2,
            88,
            47,
            113,
            114,
            130,
            67,
            50,
            1,
            67,
            2,
            15,
            108,
            10,
            31,
            72,
            40,
            68,
            1,
            24,
            26,
            2,
            88,
            47,
            115,
            114,
            106,
            15,
            88,
            56,
            100,
            114,
            81,
            1,
            67,
            89,
            115,
            2,
            108,
            24,
            56,
            26,
            10,
            31,
            72,
            40,
            68,
            1,
            57,
            2,
            88,
            47,
            113,
            114,
            130,
            67,
            50,
            1,
            67,
            2,
            15,
            108,
            24,
            52,
            26,
            100,
            88,
            80,
            40,
            38,
            1,
            34,
            24,
            52,
            26,
            2,
            116,
            100,
            94,
            88,
            47,
            113,
            114,
            130,
            67,
            50,
            1,
            67,
            2,
            15,
            88,
            47,
            115,
            114,
            130,
            67,
            50,
            1,
            61,
            67,
            1,
            34,
            24,
            52,
            26,
            2,
            2,
            15,
            106,
            24,
            58,
            26,
            100,
            108,
            24,
            52,
            26,
            24,
            57,
            26,
            116,
            90,
            20,
            95,
            131,
            81,
            83,
            74,
            67,
            106
        ]
    }
]